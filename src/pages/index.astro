---
import Layout from '../layouts/Layout.astro';
import Hero from '../components/Hero.astro';
import Services from '../components/Services.astro';
import Team from '../components/Team.astro';
import About from '../components/About.astro';
import Contact from '../components/Contact.astro';
import Clients from '../components/Clients.astro';
import Testimonios from '../components/testimonios.astro';
---

<Layout>
	<Hero />
	<About />
	<Services />
  <Clients />
  <Testimonios />
	<Team />
	<Contact />
</Layout>



<script>
  import { gsap } from "gsap"
  import { ScrollTrigger } from "gsap/ScrollTrigger"

  gsap.registerPlugin(ScrollTrigger)

console.log("Gsap VERSION:", gsap.version )
  document.addEventListener("DOMContentLoaded", () => {
    if (window.innerWidth < 768) {
      console.log("Modo telÃ©fono: animaciones desactivadas")
      return
    }

    console.log("Modo escritorio: animaciones activadas")

    const animations = [
      {
        selector: ".fade-in",
        props: () => ({ opacity: 0, y: 30 })
      },
      {
        selector: ".zoom-in",
        props: () => ({ opacity: 0, scale: 0.95 })
      },
      {
        selector: ".slide-left",
        props: () => ({ opacity: 0, x: -50 })
      },
      {
        selector: ".slide-right",
        props: () => ({ opacity: 0, x: 50 })
      },
      {
        selector: ".slide-up",
        props: () => ({ opacity: 0, y: 50 })
      },
      {
        selector: ".slide-down",
        props: () => ({ opacity: 0, y: -50 })
      },
      {
        selector: ".card-zoom",
        props: () => ({ opacity: 0, scale: 0.98 })
      }
    ]

    animations.forEach(({ selector, props }) => {
      gsap.utils.toArray(selector).forEach((el) => {
        const start = el.dataset.start || "top 80%"
        const delay = parseFloat(el.dataset.delay) || 0
        const duration = parseFloat(el.dataset.duration) || 1.5

        gsap.from(el, {
          ...props(el),
          scrollTrigger: {
            trigger: el,
            start,
            toggleActions: "play none none none",
            once: true
          },
          delay,
          duration,
          ease: "power2.out"
        })
      })
    })
  })


  // Pausar GSAP cuando el modal de video estÃ¡ abierto
document.addEventListener('DOMContentLoaded', () => {
  const videoModal = document.getElementById('video-modal');
  
  if (videoModal && typeof ScrollTrigger !== 'undefined') {
    const observer = new MutationObserver((mutations) => {
      mutations.forEach((mutation) => {
        if (mutation.attributeName === 'class') {
          const isModalOpen = !videoModal.classList.contains('hidden');
          
          if (isModalOpen) {
            console.log('ðŸŽ¬ Modal abierto - Pausando GSAP');
            // Deshabilitar TODAS las animaciones GSAP
            ScrollTrigger.getAll().forEach(st => st.disable());
            gsap.globalTimeline.pause();
          } else {
            console.log('âœ… Modal cerrado - Reactivando GSAP');
            // Reactivar animaciones
            ScrollTrigger.getAll().forEach(st => st.enable());
            gsap.globalTimeline.resume();
          }
        }
      });
    });
    
    observer.observe(videoModal, { 
      attributes: true,
      attributeFilter: ['class']
    });
  }
});
</script>

